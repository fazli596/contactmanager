{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","phone","email","className","href","onClick","bind","style","float","color","to","cursor","marginRight","Contacts","Fragment","key","Header","branding","defaultProps","About","NotFound","Test","title","body","fetch","then","response","json","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7dd09a27.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_CONTACT' :\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact =>\r\n            contact.id !== action.payload)\r\n      }; \r\n    case 'ADD_CONTACT' :\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }; \r\n    case 'UPDATE_CONTACT' :\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n\r\n  async componentDidMount () {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  };\r\n\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactInfo : false,\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo,\r\n    });\r\n  };\r\n\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const {id, name, phone, email} = this.props.contact;\r\n    const {showContactInfo} = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <a href=\"#!\" onClick={this.onShowClick}> + </a>\r\n                <a href=\"#!\" onClick={this.onDeleteClick.bind(this, id, dispatch)} style={{ float: 'right', color: 'red' }}> X </a>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <span \r\n                    style={{\r\n                      float: 'right',\r\n                      cursor: 'pointer',\r\n                      marginRight: '1rem'\r\n                    }}>Edit\r\n                  </span>\r\n                </Link>\r\n              </h4> \r\n              {showContactInfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email : {email}</li>\r\n                <li className=\"list-group-item\">Phone : {phone}</li>\r\n              </ul>) : null}\r\n\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return(\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-4\">Contact Manager</h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer> \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Header = (props) => {\r\n  const {branding} = props; \r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">Add</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App',\r\n};\r\n\r\n\r\n// checking prop types\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1 className=\"display-4\">\r\n        About Contact Manager\r\n      </h1>\r\n      <p className=\"lead\">It is a simple application to manage contacts</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1 className=\"display-4\">404, Page Not Found !</h1>\r\n      <p className=\"lead\">Sorry, the page you have requested does not exist.</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n      }))\r\n  }\r\n\r\n\r\n  render() {\r\n    const {title, body} = this.state;\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h1 className=\"display-4\">{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"{name}\">{label} :</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control', {\r\n          'is-invalid': error \r\n        })}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    { error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nTextInputGroup.propTypes  = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n// Default Props\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass AddContact extends Component {\r\n  \r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone}  = this.state;\r\n\r\n\r\n    // Error Checking\r\n    if(name === '')\r\n    {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n\r\n    // clearing textfields after adding a contact\r\n    this.setState({\r\n      name : '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n\r\n    // redirect to home page\r\n    this.props.history.push('/');\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n\r\n      return (\r\n      <Consumer>\r\n        {value => {\r\n        const { dispatch } = value;\r\n        return (\r\n          <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Add Contact</div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  placeholder=\"Enter Name ...\"\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email ...\"\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  placeholder=\"Enter Phone ...\"\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n                <div className=\"form-group text-center\">\r\n                  <input type=\"submit\" value=\"Add Contact\" name=\"submit\" className=\"form-control btn btn-primary\" />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n      }}\r\n    </Consumer>\r\n    )  \r\n  }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass EditContact extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    const { id } =  this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n    \r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n\r\n    // Error Checking\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n\r\n\r\n\r\n    // updating the contact\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n\r\n    \r\n    // clearing textfields after adding a contact\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n\r\n    // redirect to home page\r\n    this.props.history.push('/');\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name ...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email ...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone ...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <div className=\"form-group text-center\">\r\n                    <input type=\"submit\" value=\"Edit Contact\" name=\"submit\" className=\"form-control btn btn-primary\" />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default EditContact;","import React from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Provider} from './context';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}